name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  linux:
    runs-on: ubuntu-latest
    env:
      obs-studio-version: 25.0.8
      maintainer: uni@vrsal.cf
      project: input-overlay
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          submodules: true

    - name: Cache Dependencies
      id: cache-linux-deps
      uses: actions/cache@v1
      with:
        path: obs-studio
        key: obs-deps-${{ env.obs-studio-version }}-linux
    - name: Install dependencies
      if: steps.cache-linux-deps.outputs.cache-hit != 'true'
      run: |
        set -ex
        sudo add-apt-repository -y ppa:obsproject/obs-studio
        sudo apt-get -qq update
                
        sudo apt-get install -y \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-ttf-dev \
          libx11-dev \
          libxtst-dev \
          libxt-dev \
          libxinerama-dev \
          libx11-xcb-dev \
          libxkbcommon-dev \
          libxkbcommon-x11-dev \
          libxkbfile-dev \
          libc-dev-bin \
          libc6-dev git \
          build-essential \
          checkinstall \
          cmake \
          obs-studio \
          qtbase5-dev
          
        sudo wget -O /usr/include/obs/obs-frontend-api.h https://raw.githubusercontent.com/obsproject/obs-studio/25.0.0/UI/obs-frontend-api/obs-frontend-api.h
        sudo ldconfig
    - name: Compile
      shell: bash
      run: | # First build everything
          cmake -S ${{github.workspace}} -B ${{github.workspace}}/build \
            -G "Unix Makefiles" \
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/dist \
            -DCMAKE_VERBOSE_MAKEFILE=true -DOBS_FRONTEND_INCLUDE=/usr/include/obs
          cmake --build ${{github.workspace}}/build \
            --parallel 4 \
            --target install
    - name: Compile deb installer
      shell: bash
      run: | # Now only build deb installer
          cmake -S ${{github.workspace}} -B ${{github.workspace}}/build \
            -G "Unix Makefiles" \
            -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_TOOL=OFF -DENABLE_CLIENT=OFF \
            -DCMAKE_VERBOSE_MAKEFILE=true
          sudo cmake --build ${{github.workspace}}/build \
            --parallel 4 \
            --target install
          
          export GIT_HASH=$(git rev-parse --short HEAD)
          export PKG_VERSION="1-$GIT_HASH-$BRANCH_SHORT_NAME-git"
          
          [[ "$BRANCH_FULL_NAME" =~ "^refs/tags/" ]] && export PKG_VERSION="$BRANCH_SHORT_NAME"
          cd ${{github.workspace}}/build
          
          PAGER="cat" sudo checkinstall -y --type=debian --fstrans=no --nodoc \
            --backup=no --deldoc=yes --install=no \
            --pkgname=input-overlay --pkgversion="$PKG_VERSION" \
            --pkglicense="GPLv2.0" --maintainer="${{ env.maintainer }}" \
            --pkggroup="video" \
            --pkgsource="https://github.com/Palakis/obs-websocket" \
            --requires="obs-studio \(\>= ${{ env.obs-studio-version }}\), libqt5core5a, libqt5widgets5, qt5-image-formats-plugins" \
            --pakdir="../dist"
          
    - name: Cleanup
      shell: bash
      run: |
        rm -rf ${{github.workspace}}/dist/include ${{github.workspace}}/dist/lib
        chmod a+x ${{github.workspace}}/dist/client/client
        chmod a+x ${{github.workspace}}/dist/io-cct/io-cct
        sudo chmod ao+r ../dist/*
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
          name: linux-ubuntu
          path: ${{github.workspace}}/dist/**/*
